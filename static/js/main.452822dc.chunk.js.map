{"version":3,"sources":["LoginPage/LoginStyles.js","LoginPage/Login.js","LoginPage/Register.js","SearchPage/Title.js","SearchPage/Results.js","SearchPage/Dashboard.js","Routes/Main.js","App.js","serviceWorker.js","index.js"],"names":["MadeWithLove","react_default","a","createElement","Typography","variant","color","align","SnackStyles","makeStyles","theme","success","backgroundColor","green","error","palette","dark","info","primary","warning","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","MySnackbarContentWrapper","props","classes","className","onClose","other","Object","objectWithoutProperties","Icon","SnackbarContent","assign","clsx","aria-describedby","id","action","IconButton","key","aria-label","onClick","Close_default","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","opensnack","snackmessage","snackvariant","token","Saves","handleClick","bind","assertThisInitialized","handleClose","_this2","getToken","user","setState","pass","body","axios","post","apiBaseUrl","querystring","stringify","then","response","data","code","localStorage","setItem","getItem","event","_this3","setToken","catch","react_router_dom","href","reason","_this4","react_router","to","pathname","Container","component","maxWidth","CssBaseline","paper","Avatar","avatar","LockOutlined_default","TextField","margin","required","fullWidth","label","name","autoComplete","onChange","value","target","onKeyPress","e","autoFocus","type","FormControlLabel","control","Checkbox","Button","submit","Grid","container","item","Box","mt","LoginStyles_MadeWithLove","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","Component","withStyles","@global","common","white","marginTop","flexDirection","secondary","main","form","width","Register","console","log","PersonAdd_default","xs","justify","Register_MadeWithLove","Register_MySnackbarContentWrapper","Title","gutterBottom","children","useStyles1","root","flexShrink","text","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","disabled","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","Math","ceil","max","Results","rows","handleChangePage","handleChangeRowsPerPage","updaterows","onRef","undefined","query","search","get","headers","Auth-Token","params","status","Array","prototype","push","apply","payload","alert","newPage","parseInt","Fragment","Table","size","TableHead","TableRow","TableCell","TableBody","slice","map","row","nim_jur","nim_tpb","prodi","TableFooter","TablePagination","rowsPerPageOptions","colSpan","length","SelectProps","inputProps","native","onChangeRowsPerPage","ActionsComponent","Dashboard","NIM","removeItem","AppBar","position","appBar","Toolbar","toolbar","noWrap","title","match","usr","logout","content","appBarSpacer","Paper","placeholder","InputLabelProps","shrink","child","SearchPage_Results","location","ref","Dashboard_MadeWithLove","paddingRight","toolbarIcon","objectSpread","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","cyan","menuButton","menuButtonHidden","flexGrow","height","overflow","paddingTop","paddingBottom","fixedHeight","depositContext","flex","Main","exact","path","render","App","foof","Routes_Main","Boolean","window","hostname","ReactDOM","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.452822dc.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//footer\r\nexport function MadeWithLove() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Built with Material-UI by XIO84'}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\n//CSS for Login page\r\nexport const styles = theme => ({\r\n    '@global': {\r\n      body: {\r\n        backgroundColor: theme.palette.common.white,\r\n      },\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  });\r\n  \r\n//CSS for Snackbar\r\nexport const SnackStyles = makeStyles(theme => ({\r\n    success: {\r\n      backgroundColor: green[600],\r\n    },\r\n    error: {\r\n      backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n      backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n      backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n      fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n      opacity: 0.9,\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n  }));\r\n  \r\n  //Icons used in snackbar\r\n  export const variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n  };\r\n  \r\n  //Snackbar handler\r\n  export function MySnackbarContentWrapper(props) {\r\n    const classes = SnackStyles();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n  \r\n    return (\r\n      <SnackbarContent\r\n        className={clsx(classes[variant], className)}\r\n        aria-describedby=\"client-snackbar\"\r\n        message={\r\n          <span id=\"client-snackbar\" className={classes.message}>\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n            {message}\r\n          </span>\r\n        }\r\n        action={[\r\n          <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n            <CloseIcon className={classes.icon} />\r\n          </IconButton>,\r\n        ]}\r\n        {...other}\r\n      />\r\n    );\r\n  }","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport querystring from 'query-string';\r\nimport axios from 'axios';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport {MadeWithLove,styles,MySnackbarContentWrapper} from './LoginStyles';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    \r\n  username:'',\r\n  password:'pass',\r\n  opensnack:false,\r\n  snackmessage:'',\r\n  snackvariant:'error',\r\n  token:'',\r\n  Saves:false\r\n\r\n  }\r\n\r\nconstructor(props){\r\n  super(props);\r\n\r\n  this.handleClick = this.handleClick.bind(this);\r\n  this.handleClose = this.handleClose.bind(this);\r\n\r\n}\r\n\r\n  componentWillMount(){\r\n      var token = this.getToken();\r\n      if (token.user !== \"\") {\r\n        this.setState({ username : token.user, password : token.pass});\r\n        var apiBaseUrl = \"https://api.stya.net/nim/\";\r\n        var body={\r\n        \"username\":token.user,\r\n        \"password\":token.pass\r\n        }\r\n        axios.post(apiBaseUrl+'login', querystring.stringify({ username: body.username, password: body.password }))\r\n        .then((response) => {\r\n        if(response.data.code === 0){\r\n          this.setState({token: response.data.token, opensnack: true, snackmessage: 'Login success, redirecting...', snackvariant: 'success'});\r\n        }})\r\n        };\r\n  }\r\n\r\n  setToken(user, pass) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('user', user);\r\n    localStorage.setItem('pass', pass);\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return {'user' : localStorage.getItem('user'), 'pass' : localStorage.getItem('pass')}\r\n  }\r\n\r\n handleClick(event){\r\n    var apiBaseUrl = \"https://api.stya.net/nim/\";\r\n    var body={\r\n    \"username\":this.state.username,\r\n    \"password\":this.state.password\r\n    }\r\n    axios.post(apiBaseUrl+'login', querystring.stringify({ username: body.username, password: body.password }))\r\n    .then((response) => {\r\n    if(response.data.code === 0){\r\n      if (this.state.Saves === \"remember\"){\r\n        this.setToken(body.username,body.password);\r\n      }\r\n      this.setState({token: response.data.token, opensnack: true, snackmessage: 'Login success, redirecting...', snackvariant: 'success'});\r\n    }\r\n    else if(response.data.code === -2){\r\n      this.setState({opensnack: true, snackmessage: 'Username and password does not match!', snackvariant: 'error'});\r\n    }\r\n    else{\r\n      this.setState({opensnack: true, snackmessage: 'Username does not exist!', snackvariant: 'error'});\r\n    }\r\n    })\r\n    .catch((error) => {\r\n      this.setState({opensnack: true, snackmessage: 'Sign in failed!', snackvariant: 'error'});\r\n    });\r\n    }\r\n\r\n  MadeWithLove() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Built with love by the '}\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Material-UI\r\n        </Link>\r\n        {' team.'}\r\n      </Typography>\r\n    );\r\n  }\r\n    \r\n  handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    this.setState({opensnack: false});\r\n  }\r\n\r\n  render() {\r\n    if (this.state.snackvariant === 'success') {\r\n      return <Redirect to={{\r\n        pathname : this.state.username+'/search',\r\n        state: {\r\n          token : this.state.token\r\n        }\r\n      }}/>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={this.props.classes.paper}>\r\n          <Avatar className={this.props.classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"user\"\r\n              label=\"Username\"\r\n              name=\"user\"\r\n              autoComplete=\"user\"\r\n              onChange = {event => {\r\n                const { value } = event.target;\r\n                this.setState({ username: value });\r\n              }}\r\n              onKeyPress= {(e) => {\r\n                if(e.key === 'Enter') {\r\n                  this.handleClick(e);\r\n                };\r\n              }}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange = {event => {\r\n                const { value } = event.target;\r\n                this.setState({ password: value });\r\n              }}\r\n              onKeyPress= {(e) => {\r\n                if(e.key === 'Enter') {\r\n                  this.handleClick(e);\r\n                };\r\n              }}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" onChange = {event => {\r\n                const { value } = event.target;\r\n                this.setState({ Saves: value });\r\n              }} />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={this.props.classes.submit}\r\n              onClick={(event) => this.handleClick(event)}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid> */}\r\n              <Grid item>\r\n                <Link to='/Register' variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n        </div>\r\n        <Box mt={5}>\r\n          <MadeWithLove />\r\n        </Box>\r\n      </Container>\r\n      <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n      }}\r\n      open={this.state.opensnack}\r\n      autoHideDuration={6000}\r\n      onClose={this.handleClose}\r\n    >\r\n      <MySnackbarContentWrapper\r\n        onClose={this.handleClose}\r\n        variant={this.state.snackvariant}\r\n        message={this.state.snackmessage}\r\n      />\r\n    </Snackbar>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Login);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport querystring from 'query-string';\r\n\r\n//Material-ui imports\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport PersonAdd from '@material-ui/icons/PersonAdd';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\n//Footer\r\nfunction MadeWithLove() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Built with Material-UI by XIO84'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n//CSS for Register\r\nconst styles = theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: green[600],\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\n//CSS for Snackbars\r\nconst SnackStyles = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\n//Icons for Snackbars\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\n//Snackbar action handler\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = SnackStyles();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\n//MySnackbarContentWrapper properties\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nclass Register extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n    this.state = {\r\n      username:'',\r\n      password:'',\r\n      opensnack:false,\r\n      snackmessage:'',\r\n      snackvariant:'error'\r\n    };\r\n}\r\n\r\n  //Snackbar closing handler\r\n  handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    this.setState({opensnack: false});\r\n  }\r\n\r\n  //POST request to /register\r\n  handleClick(event){\r\n    var apiBaseUrl = \"https://api.stya.net/nim\";\r\n    //To be done:check for empty values before hitting submit\r\n    axios.post(apiBaseUrl+'/register', querystring.stringify({ username: this.state.username, password: this.state.password }))\r\n   .then((response) => {\r\n     if(response.data.code === 0){\r\n       this.setState({opensnack: true, snackmessage: 'Registration success, please login', snackvariant: 'success'});\r\n     }\r\n      else if(response.data.code === -4){\r\n        this.setState({opensnack: true, snackmessage: 'Username taken, please use another', snackvariant: 'warning'});\r\n     }\r\n     else if(response.data.code === -2){\r\n      this.setState({opensnack: true, snackmessage: 'Please supply a username and a password!', snackvariant: 'error'});\r\n     }\r\n   })\r\n   .catch((error) => {\r\n     this.setState({opensnack: true, snackmessage: 'Registration failed', snackvariant: 'error'});\r\n     console.log(error);\r\n   });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={this.props.classes.paper}>\r\n        <Avatar className={this.props.classes.avatar}>\r\n          <PersonAdd />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <div className={this.props.classes.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"user\"\r\n                label=\"Username\"\r\n                name=\"user\"\r\n                autoComplete=\"user\"\r\n                autoFocus\r\n                onChange = {event => {\r\n                  const { value } = event.target;\r\n                  this.setState({ username: value });\r\n                }}\r\n                onKeyPress= {(e) => {\r\n                  if(e.key === 'Enter') {\r\n                    this.handleClick(e);\r\n                  };\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange = {event => {\r\n                  const { value } = event.target;\r\n                  this.setState({ password: value });\r\n                }}\r\n                onKeyPress= {(e) => {\r\n                  if(e.key === 'Enter') {\r\n                    this.handleClick(e);\r\n                  };\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={this.props.classes.submit}\r\n            onClick={(event) => this.handleClick(event)}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to='/Login' variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          </div>\r\n      </div>\r\n      <Box mt={5}>\r\n        <MadeWithLove />\r\n      </Box>\r\n    </Container>\r\n    <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={this.state.opensnack}\r\n        autoHideDuration={6000}\r\n        onClose={this.handleClose}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={this.handleClose}\r\n          variant={this.state.snackvariant}\r\n          message={this.state.snackmessage}\r\n        />\r\n      </Snackbar>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Register);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","/* eslint-disable no-script-url */\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport { TableFooter, TablePagination } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\n//Imports for Strategy Design\n// import Context from './APIEndpoint/Context'\n// import SearchName from './APIEndpoint/SearchName'\n// import SearchNIM from './APIEndpoint/SearchNIM'\n\n//CSS styles for table footer\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n}))\n\n//Action handlers for table footer components\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"First Page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"Previous Page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"Next Page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"Last Page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n//TablePaginationActions properties\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nclass Results extends Component {\n\n  constructor(props){\n    super(props);\n    \n\n\n    this.state = {\n      page:0,\n      rowsPerPage:5,\n      rows : [],\n    };\n\n    //Function binders\n    this.handleChangePage = this.handleChangePage.bind(this);\n    this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n    this.updaterows = this.updaterows.bind(this);\n  }\n\n  //Creates \"pointers\" to be referenced from outside component\n  componentDidMount() {\n    this.props.onRef(this)\n  }\n  //Destroys said \"pointers\"\n  componentWillUnmount() {\n    this.props.onRef(undefined)\n  }\n  \n  //Updates Data\n  updaterows(query,search){\n    //Buffers\n    var rows=[];\n    var apiBaseUrl;\n    \n    if (search==='Name'){//Search by name\n      //Endpoint\n      apiBaseUrl = \"https://api.stya.net/nim/byname\";\n      //Asynchronous HTTP request with axios\n      axios.get(apiBaseUrl,{\n          headers: {\n              'Auth-Token': this.props.token\n          },\n          params: {\n              name: query,\n              count: 1000\n          }\n      })\n      .then((response) =>{\n        if(response.data.status===\"OK\"){\n            //HTTP Request Success\n            Array.prototype.push.apply(rows,response.data.payload);\n            this.setState({rows: rows});\n          }\n          else{\n            // HTTP request failed, usually by expired token\n            alert('Request failed, try logging in again')\n          }\n      })\n      .catch((error) => {\n          console.log(error);\n      })\n\n        //For Strategy Design\n        // var operation = new Context(new SearchName(this.props.token, query));\n        // var x = operation.searchresults();\n        // this.setState({rows: x});\n        // console.log(this.state.rows);\n    }\n    else if (search==='NIM'){//Search by NIM\n      apiBaseUrl = \"https://api.stya.net/nim/byid\";\n      axios.get(apiBaseUrl,{\n          headers: {\n              'Auth-Token': this.props.token\n          },\n          params: {\n              query: query,\n              count: 1000\n          }\n      })\n      .then((response) =>{\n        if(response.data.status===\"OK\"){\n            //HTTP Request Success\n            Array.prototype.push.apply(rows,response.data.payload);\n            this.setState({rows: rows});\n          }\n          else{\n            // HTTP request failed, usually by expired token\n            alert('Request failed, try logging in again')\n          }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n        //For Strategy Design\n        // var operation = new Context(new SearchName(this.props.token, query));\n        // var x = operation.searchresults();\n        // this.setState({rows: x});\n        // console.log(this.state.rows);\n    }\n  }\n\n  //Table action handlers\n  handleChangePage(event, newPage) {\n    this.setState({page:newPage});\n  }\n  handleChangeRowsPerPage(event) {\n    this.setState({rowsPerPage : parseInt(event.target.value, 10)});\n  }\n\n  render(){\n    if (this.state.rows===undefined){\n      console.log(this.state.rows);\n      return (\n        <React.Fragment>\n          <Title>{this.props.search} Search Result</Title>\n        </React.Fragment>\n      )\n    }\n\n  return (\n    <React.Fragment>\n      <Title>{this.props.search} Search Result</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>NIM Jurusan</TableCell>\n            <TableCell>NIM TPB</TableCell>\n            <TableCell>Prodi</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {/* Slices and maps data */}\n          {this.state.rows.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map(row => (\n            <TableRow key={row.name}>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.nim_jur}</TableCell>\n              <TableCell>{row.nim_tpb}</TableCell>\n              <TableCell>{row.prodi}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={this.state.rows.length}\n                rowsPerPage={this.state.rowsPerPage}\n                page={this.state.page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'Rows per page' },\n                  native: true,\n                }}\n                onChangePage={this.handleChangePage}\n                onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </React.Fragment>\n  );}\n}\n\nexport default Results","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\n//Material-ui imports\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { cyan } from '@material-ui/core/colors'\nimport { TextField, Button } from '@material-ui/core';\n\n//.js file imports\nimport Results from './Results';\nimport Title from './Title';\n\n//Footer\nfunction MadeWithLove() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Built with Material-UI by XIO84'}\n    </Typography>\n  );\n}\n\n//CSS Styles for Dashboard\nconst useStyles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    backgroundColor: cyan[500],\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  depositContext: {\n    flex: 1,\n  },\n});\n\nclass Dashboard extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      name:'',\n      NIM:'',\n      search:'',\n      query:''\n    };\n\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('user');\n    localStorage.removeItem('pass');\n  }\n\n  render()\n  {return (\n    <div className={this.props.classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={this.props.classes.appBar}>\n        <Toolbar className={this.props.classes.toolbar}>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\n            min(NIM)alist Finder\n          </Typography>\n          <Typography variant=\"body1\" color=\"inherit\" noWrap>\n            Hello, {this.props.match.params.usr}. Not you? (\n              <Link to='/login' onClick={this.logout}>log out</Link>\n            )\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={this.props.classes.content}>\n        <div className={this.props.classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={this.props.classes.container}>\n          <Grid container spacing={3}>\n            {/* Search form */}\n            <Grid item xs={12}>\n              <Paper className={this.props.classes.paper}>\n              <Title>Search By...</Title>\n              <TextField\n                id=\"Name\"\n                label=\"Name\"\n                placeholder=\"Enter Name Here\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"filled\"\n                value = {this.state.name}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange = {event => {\n                  const { value } = event.target;\n                  this.setState({ name: value });\n                }}\n                onKeyPress= {(e) => {\n                  if(e.key === 'Enter') {\n                    this.child.updaterows(this.state.name,'Name');\n                  };\n                }}\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick = {() => {this.child.updaterows(this.state.name,'Name')}}\n              >\n                Search By Name!\n              </Button>\n              <TextField\n                id=\"NIM\"\n                label=\"NIM\"\n                placeholder=\"Enter NIM Here\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"filled\"\n                value = {this.state.NIM}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange = {event => {\n                  const { value } = event.target;\n                  this.setState({ NIM: value });\n                }}\n                onKeyPress= {(e) => {\n                  if(e.key === 'Enter') {\n                    this.child.updaterows(this.state.NIM,'NIM');\n                  };\n                }}\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick = {() => {this.child.updaterows(this.state.NIM,'NIM')}}\n              >\n                Search By NIM!\n              </Button>\n              <div>\n              </div>\n              </Paper>\n            </Grid>\n            {/* Search results */}\n            <Grid item xs={12}>\n              <Paper className={this.props.classes.paper}>\n                <Results \n                token={this.props.location.state.token}\n                onRef={ref => (this.child = ref)}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n        <MadeWithLove />\n      </main>\n    </div>\n  );}\n}\n\nexport default withStyles(useStyles)(Dashboard)","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Login from '../LoginPage/Login'\r\nimport Register from '../LoginPage/Register'\r\nimport Dashboard from '../SearchPage/Dashboard'\r\n\r\nfunction Main() {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route exact path='/' render={() => (<Redirect to=\"/Login\"/>)}/>\r\n        <Route exact path='/Login' component={Login}/>\r\n        <Route exact path='/Register' component={Register}/>\r\n        <Route exact path='/:usr/search' name=\"search\" component={Dashboard}/>\r\n      </Switch>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './Routes/Main'\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      foof : ''\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Main />\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n    </BrowserRouter>), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}